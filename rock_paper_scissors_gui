import tkinter as tk
from tkinter import messagebox
import random
from PIL import Image, ImageTk

# Initialize the main window
root = tk.Tk()
root.title("Rock, Paper, Scissors")
root.state("zoomed")  # Set to full screen

# Load images for rock, paper, scissors
rock_img = Image.open("Rock Paper Scissors Game/rock.png")
paper_img = Image.open("Rock Paper Scissors Game/paper.png")
scissors_img = Image.open("Rock Paper Scissors Game/scissors.png")

# Resize images
rock_img = rock_img.resize((200, 200))
paper_img = paper_img.resize((200, 200))
scissors_img = scissors_img.resize((200, 200))

# Convert to PhotoImage for tkinter
rock_photo = ImageTk.PhotoImage(rock_img)
paper_photo = ImageTk.PhotoImage(paper_img)
scissors_photo = ImageTk.PhotoImage(scissors_img)

# Choices
choices = ["rock", "paper", "scissors"]
player_choice = None
computer_choice = None

# Score counters
player_score = 0
computer_score = 0
tie_score = 0

def get_computer_choice():
    """Randomly selects a choice for the computer"""
    return random.choice(choices)

def determine_winner(player, computer):
    """Determine the winner of the game"""
    global player_score, computer_score, tie_score
    
    if player == computer:
        tie_score += 1
        return "It's a Tie!"
    elif (player == "rock" and computer == "scissors") or \
         (player == "paper" and computer == "rock") or \
         (player == "scissors" and computer == "paper"):
        player_score += 1
        return "You Win!"
    else:
        computer_score += 1
        return "You Lose!"

def play(choice):
    """Handle the player's choice and determine the winner"""
    global player_choice, computer_choice
    player_choice = choice
    computer_choice = get_computer_choice()
    
    # Update the labels to show the player's and computer's choices
    player_label.config(image=image_dict[player_choice])
    computer_label.config(image=image_dict[computer_choice])
    
    # Determine the result
    result = determine_winner(player_choice, computer_choice)
    
    # Update score labels
    player_score_label.config(text=f"Player Score: {player_score}")
    computer_score_label.config(text=f"Computer Score: {computer_score}")
    tie_score_label.config(text=f"Ties: {tie_score}")
    
    # Display the result in a message box
    #If you dont want to display the result remove the below line of code
    messagebox.showinfo("Result", result)

def exit_game():
    """Exit the game"""
    root.quit()

# Create a dictionary to map choices to images
image_dict = {
    "rock": rock_photo,
    "paper": paper_photo,
    "scissors": scissors_photo
}

# Labels for displaying the player's and computer's choices
player_frame = tk.Frame(root)
player_frame.pack(side="left", padx=100)

computer_frame = tk.Frame(root)
computer_frame.pack(side="right", padx=100)

player_label = tk.Label(player_frame, text="Your Choice", image=rock_photo)
player_label.pack(pady=10)

computer_label = tk.Label(computer_frame, text="Computer's Choice", image=rock_photo)
computer_label.pack(pady=10)

# Labels for player and computer scores
score_frame = tk.Frame(root)
score_frame.pack(side="top", pady=20)

player_score_label = tk.Label(score_frame, text=f"Player Score: {player_score}", font=("Arial", 16))
player_score_label.pack(side="left", padx=50)

computer_score_label = tk.Label(score_frame, text=f"Computer Score: {computer_score}", font=("Arial", 16))
computer_score_label.pack(side="right", padx=50)

tie_score_label = tk.Label(root, text=f"Ties: {tie_score}", font=("Arial", 16))
tie_score_label.pack(pady=10)

# Buttons for Rock, Paper, Scissors
button_frame = tk.Frame(root)
button_frame.pack(side="bottom", pady=30)

rock_button = tk.Button(button_frame, image=rock_photo, command=lambda: play("rock"))
rock_button.grid(row=0, column=0, padx=20)

paper_button = tk.Button(button_frame, image=paper_photo, command=lambda: play("paper"))
paper_button.grid(row=0, column=1, padx=20)

scissors_button = tk.Button(button_frame, image=scissors_photo, command=lambda: play("scissors"))
scissors_button.grid(row=0, column=2, padx=20)

# Exit button
exit_button = tk.Button(root, text="Exit", font=("Arial", 16), command=exit_game)
exit_button.pack(side="bottom", pady=20)

# Start the main event loop
root.mainloop()
